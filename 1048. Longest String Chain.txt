class Solution {
    public int longestStrChain(String[] words) {
        HashMap<String, Integer> map = new HashMap<>();
        Arrays.sort(words, new Comparator<String>() {
            @Override
            public int compare(String s1, String s2) {
                return s1.length() - s2.length();
            }
        });
        for(String s: words) {
            map.put(s, 1);
        }
        for(String s: words) {
            int len = s.length();
            for(int i = 0; i <= len - 1; i++) {
                String sNew = s.substring(0, i) + s.substring(i + 1, len);
                if(map.containsKey(sNew)) {
                    int val = Math.max(map.get(s), map.get(sNew) + 1);
                    map.put(s, val);
                }
            }
        }
        int res = 1;
        for(int i: map.values()) {
            res = Math.max(res, i);
        }
        return res;
    }
}