/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void helper(int target, TreeNode root, List<Integer> cur, List<List<Integer>> res){
        if(root == null) return;
        target -= root.val;
        if(target == 0 && root.left == null && root.right == null){
            ArrayList<Integer> newCur = new ArrayList<>(cur);
            newCur.add(root.val);
            res.add(newCur);
            return;
        }
        else{
            cur.add(root.val);
            helper(target, root.left, cur, res);
            helper(target, root.right, cur, res);
            cur.remove(cur.size() - 1);
            return;
        }
    }

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> res = new ArrayList<>();
        if(root == null) return res;
        List<Integer> cur = new ArrayList<>();
        helper(targetSum, root, cur, res);
        return res;
    }
}