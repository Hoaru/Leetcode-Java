class Solution {
    // public boolean BiSearch(int[] line, int start, int end, int target) {
    //     if (start > end) {
    //         return false;
    //     }
    //     int mid = (start + end) / 2;
    //     if (line[mid] == target) {
    //         return true;
    //     }
    //     else if (line[mid] < target) {
    //         return BiSearch(line, mid + 1, end, target);
    //     }
    //     else {
    //         return BiSearch(line, start, mid - 1, target);
    //     }
    // }

    // public boolean searchMatrix(int[][] matrix, int target) {
    //     for (int i = 0; i < matrix.length; i++) {
    //         int[] line = matrix[i];
    //         if (line[0] > target) {
    //             return false;
    //         }
    //         if (BiSearch(line, 0, line.length - 1, target)) {
    //             return true;
    //         }
    //     }
    //     return false;
    // }

    public boolean searchMatrix(int[][] matrix, int target) {
        int r = 0, c = matrix[0].length - 1;
        while (r <= matrix.length - 1 && c >= 0) {
            if (matrix[r][c] == target) {
                return true;
            }
            else if (matrix[r][c] > target) {
                c--;
            }
            else if (matrix[r][c] < target) {
                r++;
            }
        }
        return false;
    }
}
