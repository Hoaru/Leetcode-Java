class Solution {

    public boolean isValidSudoku(char[][] board) {
        // 9 * 9
        int[] e = new int[]{0, 3, 6};
        for (int r: e) {
            for (int c: e) {
                HashSet<Character> set = new HashSet<>();
                for (int i = r; i < r + 3; i++) {
                    for (int j = c; j < c + 3; j++) {
                        char chr = board[i][j];
                        if (chr == '.') {
                            continue;
                        }
                        else if (!set.contains(chr)) {
                            set.add(chr);
                        }
                        else {
                            return false;
                        }
                    }
                }
            }
        }
        // r
        for (int i = 0; i < 9; i++) {
            HashSet<Character> set = new HashSet<>();
            for (int j = 0; j < 9; j++) {
                char chr = board[i][j];
                if (chr == '.') {
                    continue;
                }
                else if (!set.contains(chr)) {
                    set.add(chr);
                }
                else {
                    return false;
                }
            }
        }
        // c
        for (int j = 0; j < 9; j++) {
            HashSet<Character> set = new HashSet<>();
            for (int i = 0; i < 9; i++) {
                char chr = board[i][j];
                if (chr == '.') {
                    continue;
                }
                else if (!set.contains(chr)) {
                    set.add(chr);
                }
                else {
                    return false;
                }
            }
        }
        return true;
    }
}
