/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int minDepth(TreeNode root) {
        if(root == null) {
            return 0;
        }
        Queue<TreeNode> qu = new LinkedList<>();
        qu.add(root);
        int res = 0;
        while(!qu.isEmpty()) {
            res++;
            Queue<TreeNode> newQu = new LinkedList<>();
            while(!qu.isEmpty()) {
                TreeNode top = qu.poll();
                if (top == null) {
                    continue;
                }
                if (top.left == null && top.right == null) {
                    return res;
                }
                newQu.add(top.left);
                newQu.add(top.right);
            }
            qu = newQu;
        }
        return res;
    }
}
