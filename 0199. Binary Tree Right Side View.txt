/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        if (root == null) {
            return res;
        }
        Queue<TreeNode> qu = new LinkedList<>();
        qu.add(root);
        while(!qu.isEmpty()) {
            Queue<TreeNode> newQu = new LinkedList<>();
            while(!qu.isEmpty()) {
                TreeNode top = qu.poll();
                if(qu.isEmpty()) {
                    res.add(top.val);
                }
                if(top.left != null) {
                    newQu.add(top.left);
                }
                if(top.right != null) {
                    newQu.add(top.right);
                }
            }
            qu = newQu;
        }
        return res;
    }
}
