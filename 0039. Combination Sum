class Solution {
    
    public void helper(List<List<Integer>> res, List<Integer> curr, int[] nums, int t, int index) {
        if (t == 0) {
            res.add(new ArrayList<>(curr));
        }
        else if (index == nums.length || t < 0) {}
        else {
            for (int i = index; i < nums.length; i++) {
                curr.add(nums[i]);
                helper(res, curr, nums, t - nums[i], i);
                curr.remove(curr.size() - 1);
            }
        }
    }

    public List<List<Integer>> combinationSum(int[] nums, int t) {
        Arrays.sort(nums);
        List<List<Integer>> res = new ArrayList<>();
        helper(res, new ArrayList<>(), nums, t, 0);
        return res;
    }
}
