/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(k == 0 || head == null) return head;
        ListNode res = null;
        ListNode pointer = head;
        int sum = 1;
        while(pointer.next != null) {
            pointer = pointer.next; 
            sum ++;
        }
        k = sum - (k % sum);
        pointer.next = head;
        //pointer now = end
        int c = 0;
        while(true) {
            pointer = pointer.next;
            c++;
            if(c == k) {
                res = pointer.next;
                pointer.next = null;
                return res;
            }
        }
    }
}