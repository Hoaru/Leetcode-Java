/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if (head == null || k == 0) {
            return head;
        }
        int n = 1;
        ListNode p = head;
        while (p.next != null) {
            p = p.next;
            n++;
        }
        p.next = head;
        k = n - k % n;
        if (k == 0) {
            return head;
        }
        p = head;
        n = 0;
        while (n < k - 1) {
            n++;
            p = p.next;
        }
        ListNode res = p.next;
        p.next = null;
        return res;
    }
}
