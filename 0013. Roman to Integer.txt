class Solution {
    // public int romanToInt(String s) {
    //     HashMap<Character, Integer> map = new HashMap<>();
    //     map.put('I', 1);
    //     map.put('V', 5);
    //     map.put('X', 10);
    //     map.put('L', 50);
    //     map.put('C', 100);
    //     map.put('D', 500);
    //     map.put('M', 1000);
    //     int len = s.length();
    //     int last = 0;
    //     int sum = 0;
    //     for (int i = len - 1; i > - 1; i--) {
    //         int curr = map.get(s.charAt(i));
    //         sum += (curr < last ? - 1 * curr : curr);
    //         last = curr;
    //     }
    //     return sum;
    // }

    public int romanToInt(String s) {
        int len = s.length();
        int last = 0;
        int sum = 0;
        for (int i = len - 1; i > - 1; i--) {
            int curr = 0;
            switch (s.charAt(i)) {
                case 'I': {
                    curr = 1;
                    break;
                }
                case 'V': {
                    curr = 5;
                    break;
                }
                case 'X': {
                    curr = 10;
                    break;
                }
                case 'L': {
                    curr = 50;
                    break;
                }
                case 'C': {
                    curr = 100;
                    break;
                }
                case 'D': {
                    curr = 500;
                    break;
                }
                case 'M': {
                    curr = 1000;
                    break;
                }
            }
            sum += (curr < last ? - 1 * curr : curr);
            last = curr;
        }
        return sum;
    }
}
