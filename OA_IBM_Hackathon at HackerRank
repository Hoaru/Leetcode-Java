import java.util.*;
public class Main {

    public static int solve(int[] nums, int k) {
        int res = 0;
        HashMap<Integer, Integer> counts = new HashMap<>();
        for (int i : nums) {
            counts.put(i, counts.getOrDefault(i, 0) + 1);
        }
        TreeSet<Integer> set = new TreeSet<>(counts.keySet());
        //从小到大
        ArrayList<Integer> arr = new ArrayList<>(set);
        HashMap<Integer, Integer> rightSum = new HashMap<>();
        int sum = 0;
        for (int i = arr.size() - 1; i > -1; i--) {
            rightSum.put(arr.get(i), sum);
            sum += counts.get(arr.get(i));
        }
        if (k >= nums.length - 1) {
            return sum;
        }
        for (int i : arr) {
            int change = Math.min(k, rightSum.get(i));
            int curr = counts.get(i) + change;
            res = Math.max(res, curr);
        }
        return res;
    }


    public static void main(String[] argv) {
        int[] nums = new int[]{1,2,2,3,4};
        System.out.println(solve(nums, 2));
    }
}
